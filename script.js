// script.js

let randomNumber = Math.floor(Math.random() * 100) + 1; 
let attempts = 0;

const guessButton = document.getElementById('guess-button');
const guessInput = document.getElementById('guess-input');
const attemptsDisplay = document.getElementById('attempts');
const resultMessage = document.getElementById('result-message');
const restartButton = document.getElementById('restart-button');
const confettiContainer = document.getElementById('confetti-container');

// Array de mensagens motivacionais
const motivationalMessages = [
    "Voc√™ est√° indo muito bem!",
    "N√£o desista, voc√™ consegue!",
    "Tente novamente, voc√™ est√° quase l√°!",
    "Continue assim, voc√™ est√° perto!",
    "A cada tentativa, voc√™ fica mais pr√≥ximo do sucesso!",
    "Sua persist√™ncia vai te levar √† vit√≥ria!",
    "Continue tentando, voc√™ est√° arrasando!",
    "Cada palpite conta! Voc√™ consegue!",
    "Voc√™ est√° fazendo um √≥timo trabalho!",
    "Cada tentativa √© um passo mais perto!"
];

// Fun√ß√£o para gerar confetes
function createConfetti() {
    const confetti = document.createElement('div');
    confetti.classList.add('confetti');
    confetti.style.left = Math.random() * 100 + 'vw'; // Posi√ß√£o horizontal aleat√≥ria
    confetti.style.backgroundColor = getRandomColor(); // Cor aleat√≥ria
    confetti.style.animationDuration = Math.random() * 2 + 3 + 's'; // Dura√ß√£o aleat√≥ria
    
    confettiContainer.appendChild(confetti);

    // Remove o confete ap√≥s a anima√ß√£o
    setTimeout(() => {
        confetti.remove();
    }, 5000); // Ajuste o tempo conforme necess√°rio
}

// Gera uma cor aleat√≥ria
function getRandomColor() {
    const letters = '0123456789ABCDEF';
    let color = '#';
    for (let i = 0; i < 6; i++) {
        color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
}

// Fun√ß√£o para adicionar o emoji
function createEmoji() {
    const emoji = document.createElement('div');
    emoji.classList.add('emoji');
    emoji.innerText = 'üéâ'; // Emoji de festivo
    emoji.style.fontSize = '200px'; // Tamanho do emoji, ajuste conforme necess√°rio
    emoji.style.position = 'absolute'; // Para que o emoji apare√ßa em qualquer lugar
    emoji.style.left = '50%'; // Alinha horizontalmente ao centro
    emoji.style.top = '50%'; // Alinha verticalmente ao centro
    emoji.style.transform = 'translate(-50%, -50%)'; // Move para centralizar
    document.body.appendChild(emoji);

    // Remove o emoji ap√≥s 3 segundos
    setTimeout(() => {
        emoji.remove();
    }, 3000); // Ajuste o tempo conforme necess√°rio
}

// Adiciona um evento de clique ao bot√£o de adivinhar
guessButton.addEventListener('click', () => {
    const userGuess = parseInt(guessInput.value);

    // Verifica se o palpite est√° dentro do intervalo permitido
    if (isNaN(userGuess) || userGuess < 1 || userGuess > 100) {
        resultMessage.innerText = 'Por favor, insira um n√∫mero entre 1 e 100.';
        return; 
    }

    attempts++;
    attemptsDisplay.innerText = `Tentativas: ${attempts}`;

    // Verifica se o palpite √© o n√∫mero correto
    if (userGuess === randomNumber) {
        resultMessage.innerText = `Parab√©ns! Voc√™ adivinhou o n√∫mero ${randomNumber} em ${attempts} tentativas.`;
        restartButton.style.display = 'block'; 
        guessButton.disabled = true; 
        
        // Gera confetes e emoji quando o n√∫mero √© adivinhado corretamente
        for (let i = 0; i < 100; i++) {
            createConfetti();
        }
        createEmoji(); // Adiciona o emoji festivo
    } else if (userGuess < randomNumber) {
        if (randomNumber - userGuess <= 5) { // Verifica se est√° perto
            resultMessage.innerText = 'Muito perto! Tente um n√∫mero um pouco maior! ' + getRandomMotivationalMessage();
        } else {
            resultMessage.innerText = 'Tente um n√∫mero maior!';
        }
    } else if (userGuess > randomNumber) {
        if (userGuess - randomNumber <= 5) { // Verifica se est√° perto
            resultMessage.innerText = 'Muito perto! Tente um n√∫mero um pouco menor! ' + getRandomMotivationalMessage();
        } else {
            resultMessage.innerText = 'Tente um n√∫mero menor!';
        }
    }

    // Mensagem de incentivo ap√≥s 4 tentativas
    if (attempts > 4) {
        resultMessage.innerText += ' N√£o desista, voc√™ consegue! ' + getRandomMotivationalMessage();
    }
});

// Fun√ß√£o para pegar uma mensagem motivacional aleat√≥ria
function getRandomMotivationalMessage() {
    const randomIndex = Math.floor(Math.random() * motivationalMessages.length);
    return motivationalMessages[randomIndex];
}

// Adiciona um evento de clique ao bot√£o de reiniciar
restartButton.addEventListener('click', () => {
    randomNumber = Math.floor(Math.random() * 100) + 1; 
    attempts = 0;
    attemptsDisplay.innerText = `Tentativas: ${attempts}`;
    resultMessage.innerText = '';
    guessInput.value = '';
    restartButton.style.display = 'none'; 
    guessButton.disabled = false; 
});
